<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>io.hyperfoil.tools</groupId>
    <artifactId>qDup</artifactId>
    <version>0.6.17-SNAPSHOT</version>
    <name>Hyperfoil qDup</name>
    <description>Coordinate multiple terminal shell connections for queuing performance tests and collecting output files</description>
    <url>https://github.com/Hyperfoil/qDup</url>
    <properties>
        <maven.buildNumber.shortRevisionLength>7</maven.buildNumber.shortRevisionLength>
        <compiler-plugin.version>3.8.1</compiler-plugin.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <graalvm.version>21.2.0</graalvm.version>
        <vertx.version>4.3.3</vertx.version>
        <version.maven.gpg>1.6</version.maven.gpg>
        <version.maven.source>3.2.0</version.maven.source>
        <version.maven.javadoc>3.2.0</version.maven.javadoc>
        <version.log4j>2.17.2</version.log4j>
        <version.slf4j>1.7.36</version.slf4j>
        <version.yaup>0.8.18-SNAPSHOT</version.yaup>
        <version.parse>0.1.13-SNAPSHOT</version.parse>
        <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
        <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>
        <quarkus.platform.version>2.12.3.Final</quarkus.platform.version>
        <skipITs>true</skipITs>
        <surefire-plugin.version>3.0.0-M7</surefire-plugin.version>
        <graal.version>22.2.0</graal.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>${quarkus.platform.group-id}</groupId>
                <artifactId>${quarkus.platform.artifact-id}</artifactId>
                <version>${quarkus.platform.version}</version>
                <type>pom</type>
                <scope>import</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.jboss.logmanager</groupId>
                        <artifactId>jboss-logmanager</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <scm>
        <connection>scm:git:git://github.com/Hyperfoil/qDup.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/Hyperfoil/qDup.git</developerConnection>
        <url>https://github.com/Hyperfoil/qDup</url>
        <tag>HEAD</tag>
    </scm>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Will Reichert</name>
            <email>wreicher@redhat.com</email>
            <organization>Red Hat</organization>
            <organizationUrl>http://www.redhat.com</organizationUrl>
        </developer>
        <developer>
            <name>John O'Hara</name>
            <email>johara@redhat.com</email>
            <organization>Red Hat</organization>
            <organizationUrl>http://www.redhat.com</organizationUrl>
        </developer>
        <developer>
            <name>St√•le Pedersen</name>
            <email>spederse@redhat.com</email>
            <organization>Red Hat</organization>
            <organizationUrl>http://www.redhat.com</organizationUrl>
        </developer>
        <developer>
            <name>Jesper Pedersen</name>
            <email>jesper.pedersen@redhat.com</email>
            <organization>Red Hat</organization>
            <organizationUrl>http://www.redhat.com</organizationUrl>
        </developer>
    </developers>


    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>


    <build>
        <plugins>
            <plugin>
                <groupId>${quarkus.platform.group-id}</groupId>
                <artifactId>quarkus-maven-plugin</artifactId>
                <version>${quarkus.platform.version}</version>
                <extensions>true</extensions>
                <configuration>
                    <skipOriginalJarRename>true</skipOriginalJarRename>
                </configuration>
                <executions>
                    <execution>
                        <id>uber</id>
                        <goals>
                            <goal>build</goal>
                            <goal>generate-code</goal>
                            <goal>generate-code-tests</goal>
                        </goals>
                        <configuration>
                            <properties>
                                <quarkus.package.type>uber-jar</quarkus.package.type>
                            </properties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${compiler-plugin.version}</version>
                <configuration>
                    <compilerArgs>
                        <arg>-parameters</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire-plugin.version}</version>
                <configuration>
                    <systemPropertyVariables>
                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                        <maven.home>${maven.home}</maven.home>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${surefire-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <systemPropertyVariables>
                                <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                                <maven.home>${maven.home}</maven.home>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                        <phase>validate</phase>
                    </execution>
                </executions>
                <configuration>
                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>io.hyperfoil.tools.qdup.QDup</mainClass>
                        </manifest>
                        <manifestEntries>
                            <hash>${git.commit.id.abbrev}</hash>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>1.17.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.sshd</groupId>
            <artifactId>sshd-core</artifactId>
            <version>2.8.0</version>
        </dependency>
        <dependency>
            <groupId>net.i2p.crypto</groupId>
            <artifactId>eddsa</artifactId>
            <version>0.3.0</version>
        </dependency>
        <dependency>
            <groupId>io.hyperfoil.tools</groupId>
            <artifactId>yaup</artifactId>
            <version>${version.yaup}</version>
        </dependency>
        <dependency>
            <groupId>io.hyperfoil.tools</groupId>
            <artifactId>parse</artifactId>
            <version>${version.parse}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${version.slf4j}</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.slf4j</groupId>
            <artifactId>slf4j-jboss-logmanager</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>1.4</version>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-reactive-routes</artifactId>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-json-schema</artifactId>
            <version>${vertx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-vertx</artifactId>
            <version>6.0.0.Final</version>
        </dependency>
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>1.31</version>
        </dependency>
        <dependency>
            <groupId>org.graalvm.sdk</groupId>
            <artifactId>graal-sdk</artifactId>
            <version>${graalvm.version}</version>
        </dependency>
        <dependency>
            <groupId>org.graalvm.js</groupId>
            <artifactId>js</artifactId>
            <version>${graalvm.version}</version>
        </dependency>
        <!--
                com.oracle.svm.core.util.UserError$UserException: Classes that should be initialized at run time got initialized during image building:
                io.netty.buffer.PooledByteBufAllocator the class was requested to be initialized at run time (from 'META-INF/native-image/io.netty/buffer/native-image.properties' in 'file:///home/wreicher/code/perf/parse/target/parse-0.1.13-SNAPSHOT-native-image-source-jar/lib/io.netty.netty-buffer-4.1.79.Final.jar' with 'io.netty.buffer.PooledByteBufAllocator' and from feature io.quarkus.runner.Feature.beforeAnalysis with 'PooledByteBufAllocator.class'). To see why io.netty.buffer.PooledByteBufAllocator got initialized use &#45;&#45;trace-class-initialization=io.netty.buffer.PooledByteBufAllocator
        -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-vertx</artifactId>
        </dependency>

<!--
        Caused by: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved method during parsing: org.apache.sshd.common.util.security.bouncycastle.BouncyCastleRandom.<init>(). This error is reported at image build time because class org.apache.sshd.common.util.security.bouncycastle.BouncyCastleRandomFactory is registered for linking at image build time by command line
-->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-security</artifactId>
        </dependency>

<!--        org/bouncycastle/crypto/prng/RandomGenerator-->
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk15to18</artifactId>
            <version>1.72</version>
        </dependency>

        <!--
                Caused by: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved type during parsing: io.netty.util.internal.logging.Log4J2Logger. This error is reported at image build time because class io.netty.util.internal.logging.Log4J2LoggerFactory is registered for linking at image build time by command line
        -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-netty</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-picocli</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-arc</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-junit5</artifactId>
            <scope>test</scope>
        </dependency>


        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <repositories>
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
    </repositories>


    <profiles>
        <profile>
            <id>native</id>
            <activation>
                <property>
                    <name>native</name>
                </property>
            </activation>
            <properties>
                <skipITs>false</skipITs>
                <quarkus.package.type>native</quarkus.package.type><!-- language:js  -H:ReflectionConfigurationFiles=${project.basedir}/src/main/resources/reflection-config.json ,-H:ResourceConfigurationFiles=${project.basedir}/src/main/resources/resources-config.json -->
                <!--
                ,- -allow-incomplete-classpath \
                    - -enable-all-security-services \
                    - -report-unsupported-elements-at-runtime \
                    - -initialize-at-run-time=org.bouncycastle.jcajce.provider.drbg.DRBG$Default\,
                    org.bouncycastle.jcajce.provider.drbg.DRBG$NonceAndIV\,
                    javax.net.ssl.SSLContext \
                    - -initialize-at-build-time=org.bouncycastle.util.Strings\,
                    org.bouncycastle.util.Arrays\,
                    org.bouncycastle.util.Properties\,
                    org.bouncycastle.util.Pack\,
                    org.bouncycastle.util.Integers\,
                    org.bouncycastle.util.Properties$1\,
                    org.bouncycastle.crypto.digests.SHA512Digest\,
                    org.bouncycastle.crypto.digests.LongDigest\,
                    org.bouncycastle.crypto.params.KeyParameter\,
                    org.bouncycastle.jcajce.provider.drbg.DRBG$HybridSecureRandom\,
                    org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$HashDRBGProvider\,
                    org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$HMacDRBGProvider\,
                    org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG\,
                    org.bouncycastle.jcajce.provider.drbg.DRBG$HybridSecureRandom$SignallingEntropySource\,
                    org.bouncycastle.crypto.prng.SP800SecureRandomBuilder\,
                    org.bouncycastle.crypto.prng.BasicEntropySourceProvider$1\,
                    org.bouncycastle.jcajce.provider.drbg.DRBG$2\,
                    org.bouncycastle.jcajce.provider.drbg.DRBG$HybridRandomProvider\,
                    org.bouncycastle.jcajce.provider.drbg.DRBG$HybridSecureRandom$SignallingEntropySource$EntropyGatherer\,
                    org.bouncycastle.crypto.prng.drbg.Utils\,
                    org.bouncycastle.crypto.prng.BasicEntropySourceProvider\,
                    org.bouncycastle.crypto.macs.HMac\,
                    org.bouncycastle.jcajce.provider.drbg.DRBG$HybridSecureRandom$1
                -->
                <!-- - - trace-object-instantiation=io.vertx.core.buffer.impl.VertxUnsafeHeapByteBuf,-->
                <quarkus.native.additional-build-args>--trace-object-instantiation=io.vertx.core.buffer.impl.VertxUnsafeHeapByteBuf,-Dpolyglot.image-build-time.PreinitializeContexts=js,--language:js,--report-unsupported-elements-at-runtime,-Dtruffle.TruffleRuntime=com.oracle.truffle.api.impl.DefaultTruffleRuntime,-H:ReflectionConfigurationFiles=reflection-config.json,-H:ResourceConfigurationFiles=resources-config.json,-H:DynamicProxyConfigurationFiles=proxy-config.json</quarkus.native.additional-build-args>
            </properties>
        </profile>
        <profile>
            <id>release</id>
            <activation>
                <property>
                    <name>release</name>
                </property>
            </activation>

            <build>
                <plugins>
                    <!-- To release to Maven central -->
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                    <!-- To generate javadoc -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>${version.maven.source}</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>${version.maven.javadoc}</version>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- To sign the artifacts -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>${version.maven.gpg}</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>

            </build>
        </profile>
    </profiles>
</project>
